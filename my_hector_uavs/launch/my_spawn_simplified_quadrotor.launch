<?xml version="1.0"?>
<launch>
  <!-- Default values -->
  <arg name="name" default="quadrotor"/>
  <arg name="model" default="$(find hector_quadrotor_description)/urdf/quadrotor.gazebo.xacro"/> <!-- The model is given by the upper launch file -->
  <arg name="tf_prefix" default="$(optenv ROS_NAMESPACE)"/>

  <arg name="x" default="0.0"/>
  <arg name="y" default="0.0"/>
  <arg name="z" default="0.2"/>
  <arg name="Y" default="0.0"/>
  <arg name="world_frame" default="world"/>
  <arg name="base_link_frame" default="base_link"/>


  <!-- send the robot XML to param server -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(arg model)' base_link_frame:=$(arg base_link_frame) world_frame:=$(arg world_frame)" />
  <param name="base_link_frame" type="string" value="$(arg base_link_frame)" />
  <param name="world_frame" type="string" value="$(arg world_frame)" />

  <!-- start robot state publisher -->
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen" >
    <param name="publish_frequency" type="double" value="50.0" />
  </node>

  <!-- load controllers -->
  <include file="$(find hector_quadrotor_controllers)/launch/controller.launch">
    <arg name="controllers" value="controller/position controller/velocity controller/attitude"/>
  </include>

  <!-- push robot_description to factory and spawn robot in gazebo -->
  <node name="spawn_robot" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -x $(arg x) -y $(arg y) -z $(arg z) -Y $(arg Y) -model $(arg name)" respawn="false" output="screen"/>

</launch>
